Metadata-Version: 2.4
Name: kittentts
Version: 0.1.0
Summary: Ultra-lightweight text-to-speech model with just 15 million parameters
Home-page: https://github.com/kittenml/kittentts
Author: KittenML
Author-email: 
License: Apache 2.0
Project-URL: Homepage, https://github.com/kittenml/kittentts
Project-URL: Repository, https://github.com/kittenml/kittentts
Project-URL: Issues, https://github.com/kittenml/kittentts/issues
Keywords: text-to-speech,tts,speech-synthesis,neural-networks,onnx
Classifier: Topic :: Multimedia :: Sound/Audio :: Speech
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: num2words
Requires-Dist: spacy
Requires-Dist: espeakng_loader
Requires-Dist: misaki[en]>=0.9.4
Requires-Dist: onnxruntime
Requires-Dist: soundfile
Requires-Dist: numpy
Requires-Dist: huggingface_hub
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Kitten TTS ðŸ˜»

Kitten TTS is an open-source realistic text-to-speech model with just 15 million parameters, designed for lightweight deployment and high-quality voice synthesis.

*Currently in developer preview*

[Join our discord](https://discord.gg/upcyF5s6)


## âœ¨ Features

- **Ultra-lightweight**: Model size less than 25MB
- **CPU-optimized**: Runs without GPU on any device
- **High-quality voices**: Several premium voice options available
- **Fast inference**: Optimized for real-time speech synthesis



## ðŸš€ Quick Start

### Installation

```
pip install https://github.com/KittenML/KittenTTS/releases/download/0.1/kittentts-0.1.0-py3-none-any.whl
```



 ### Basic Usage 

```
from kittentts import KittenTTS
m = KittenTTS("KittenML/kitten-tts-nano-0.1")

audio = m.generate("This high quality TTS model works without a GPU", voice='expr-voice-2-f' )

# available_voices : [  'expr-voice-2-m', 'expr-voice-2-f', 'expr-voice-3-m', 'expr-voice-3-f',  'expr-voice-4-m', 'expr-voice-4-f', 'expr-voice-5-m', 'expr-voice-5-f' ]

# Save the audio
import soundfile as sf
sf.write('output.wav', audio, 24000)

```





## ðŸ’» System Requirements

Works literally everywhere



## Checklist 

- [x] Release a preview model
- [ ] Release the fully trained model weights
- [ ] Release mobile SDK 
- [ ] Release web version 

